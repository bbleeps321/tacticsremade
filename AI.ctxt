#BlueJ class context
comment0.target=class\ AI
comment0.text=\nControls\ the\ processes\ by\ which\ the\ computer\ controls\ units.\n\n
comment1.params=myEnemy\ myScore
comment1.target=int[]\ evaluateForAlive(ArrayList<Unit>,int[])
comment1.text=\nEvaluates\ the\ possible\ targets\ based\ on\ whether\ they\ are\ alive\ or\ not.\nIf\ dead,\ set\ their\ score\ to\ -1;\nShould\ only\ be\ called\ by\ getTarget,\ after\ the\ parent\ unit,\ enemies,\ and\ scores\ have\ been\ (re)set\ and\ at\ the\ END\ of\ the\ method.\nReturns\ the\ updated\ scores.\n\n
comment2.params=myUnit\ myEnemy\ myScore
comment2.target=int[]\ evaluateForDistance(Unit,ArrayList<Unit>,int[])
comment2.text=\nEvaluates\ the\ possible\ targets\ based\ on\ their\ distance\ from\ the\ parent\ unit.\nShould\ only\ be\ called\ by\ getTarget,\ after\ the\ parent\ unit,\ enemies,\ and\ scores\ have\ been\ (re)set.\nReturns\ the\ updated\ scores.\n\n
comment3.params=thisUnit\ thatUnit
comment3.target=int\ distanceFrom(Unit,Unit)
comment3.text=\nReturns\ the\ distance\ between\ the\ parent\ unit\ and\ the\ specified\ unit\ in\ grid\ units.\n\n
comment4.params=myUnit\ myEnemy\ myScore
comment4.target=int[]\ evaluateForCounter(Unit,ArrayList<Unit>,int[])
comment4.text=\nEvaluates\ the\ possible\ targets\ based\ on\ whether\ or\ not\ they\ can\ counter\ attack\ the\ parent\ unit.\nShould\ only\ be\ called\ by\ getTarget,\ after\ the\ parent\ unit,\ enemies,\ and\ scores\ have\ been\ (re)set.\nReturns\ the\ updated\ scores.\n\n
comment5.params=parentUnit\ enemies
comment5.target=Unit\ getTarget(Unit,ArrayList<ArrayList<Unit>>)
comment5.text=\nReturns\ the\ enemy\ unit\ that\ the\ AI\ has\ decided\ to\ target\ using\ the\ specified\ parent\ unit,\ and\ ArrayList\ of\ enemy\ sides.\nHighest\ score\ is\ the\ most\ optimal\ unit.\nReturns\ null\ if\ the\ target\ with\ the\ greatest\ score\ is\ not\ in\ the\ unit's\ movement\ range.\n\n
comment6.params=myEnemy\ myScore
comment6.target=int[]\ evaluateForHP(ArrayList<Unit>,int[])
comment6.text=\nEvaluates\ the\ possible\ targets\ based\ on\ how\ much\ hp\ they\ have.\nShould\ only\ be\ called\ by\ getTarget,\ after\ the\ parent\ unit,\ enemies,\ and\ scores\ have\ been\ (re)set.\nReturns\ the\ updated\ scores.\n\n
comment7.params=myUnit\ myEnemy
comment7.target=int\ indexOfOptimalWpn(Unit,Unit)
comment7.text=\nReturns\ the\ index\ of\ the\ best\ weapon\ to\ attack\ with.\nReturns\ -1\ if\ there\ is\ no\ optimal\ weapon\ (target\ can\ counter\ attack\ each\ weapon)\n\n
comment8.params=myUnit\ myEnemy
comment8.target=int\ optimalAtkDist(Unit,Unit)
comment8.text=\nReturns\ the\ optimal\ distance\ of\ the\ first\ unit\ to\ attack\ the\ other.\nReturns\ -1\ if\ there\ is\ no\ optimal\ distance\ (target\ can\ counter\ attack\ regardless).\n\n
numComments=9
